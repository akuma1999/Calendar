{"version":3,"sources":["component/Header.js","component/Tableshowdate.js","component/WorkItem.js","component/List_work.js","component/Addnewwork.js","component/Edituser.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Tableshowdate","props","componentWillMount","date_full","Date","setState","thismonth","getMonth","thisyear","getFullYear","setDate","firstday","getDay","control","newmonth","state","setMonth","setFullYear","console","log","Day_of_month","click_Date","j","change","change_edit","show_list_date","list_date_work_in_month","dulieu","forEach","item","d","date","push","getDate","list_date","i","date_content","toString","onClick","month_num_to_string","month","aria-hidden","this","WorkItem","role","id","data-toggle","data-parent","href","keyid","aria-expanded","aria-controls","nodetitle","del","aria-labelledby","nodecontent","List_work","showlistwork","data","length","map","value","year","changeWork","header","content","renderbtnaddnew","status","type","aria-multiselectable","Addnewwork","ischange","event","name","target","style","width","placeholder","onChange","h","c","add","Edituser","edit","user","defaultValue","App","changeEditstatus","bool","bool2","Editstatus","Editstatus2","change_work","object","userEditObject","changeRenderListstatus","m","y","renderListstatus","thisdate","editSubmit","token","index","Delete_work","undefined","clone","splice","Add_work","uuidv4","items","alert","renderEdit","renderListWork","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cc912ae1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n          <div className=\"jumbotron\">\r\n                <h1 className=\"display-3 text-center\">Test calendar</h1>\r\n                <p className=\"lead text-center\">by nguyễn hoàng lâm</p>\r\n                <hr className=\"my-2\" />\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Tableshowdate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            thismonth : 0,\r\n            thisyear : 0,\r\n            firstday : 0,\r\n        }\r\n    }\r\n\r\n    componentWillMount = () =>{//=> save current month and  current year befor component render\r\n        let date_full = new Date()\r\n        this.setState({\r\n            thismonth : date_full.getMonth() + 1,\r\n            thisyear : date_full.getFullYear()     \r\n        })\r\n\r\n        date_full.setDate(1)\r\n\r\n        this.setState({\r\n            firstday : date_full.getDay(),    \r\n        })\r\n\r\n\r\n    }\r\n\r\n    setDate = (control) =>{//=> Set dynamic date information when click previous or next\r\n        if(control === \"+\")\r\n        {                \r\n            let date_full = new Date()            \r\n            let newmonth = this.state.thismonth + 1\r\n\r\n            if(this.state.thismonth === 12)\r\n            {    \r\n                date_full.setMonth(0)\r\n                date_full.setFullYear(this.state.thisyear+1)\r\n                date_full.setDate(1)\r\n\r\n                this.setState({\r\n                    thismonth : 1,\r\n                    firstday : date_full.getDay(),\r\n                    thisyear : date_full.getFullYear()\r\n                })\r\n            }\r\n            else\r\n            {\r\n                date_full.setMonth(newmonth-1)\r\n                date_full.setFullYear(this.state.thisyear)\r\n                date_full.setDate(1)\r\n                this.setState({\r\n                    thismonth : newmonth,\r\n                    firstday : date_full.getDay(),\r\n                    thisyear : date_full.getFullYear()\r\n                })\r\n\r\n                console.log(this.state.thisyear)\r\n                console.log(this.state.thismonth)\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            let date_full = new Date()            \r\n            let newmonth = this.state.thismonth - 1\r\n\r\n            if(this.state.thismonth === 1)\r\n            {    \r\n                date_full.setMonth(11)\r\n                date_full.setFullYear(this.state.thisyear-1)\r\n                date_full.setDate(1)\r\n                this.setState({\r\n                    thismonth : 12,\r\n                    firstday : date_full.getDay(),\r\n                    thisyear : date_full.getFullYear()\r\n                })\r\n            }\r\n            else\r\n            {\r\n                date_full.setMonth(newmonth-1)\r\n                date_full.setFullYear(this.state.thisyear)\r\n                date_full.setDate(1)\r\n                this.setState({\r\n                    thismonth : newmonth,\r\n                    firstday : date_full.getDay(),\r\n                    thisyear : date_full.getFullYear()\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    Day_of_month = () =>{ //fint max date in current month\r\n        switch (this.state.thismonth) {\r\n            case 1 :\r\n                return 31\r\n            case 3 :\r\n                return 31\r\n            case 5 :\r\n                return 31\r\n            case 7 :\r\n                return 31\r\n            case 8 :\r\n                return 31\r\n            case 10 :\r\n                return 31\r\n            case 12 :\r\n                return 31\r\n\r\n            case 2:\r\n                if(this.state.thisyear % 4 === 0)\r\n                {\r\n                    return 29\r\n                }\r\n                else\r\n                {\r\n                    return 28\r\n                }\r\n\r\n            default:\r\n                return 30\r\n        }\r\n    }\r\n\r\n    click_Date = (j) =>{ //set date when you click one date in calendar\r\n        this.props.change(true,j,this.state.thismonth,this.state.thisyear)\r\n\r\n        this.props.change_edit(false,false)\r\n    }\r\n\r\n    show_list_date = () =>{\r\n\r\n        const list_date_work_in_month = []\r\n        this.props.dulieu.forEach((item) => {\r\n                    let d = new Date(item.date)\r\n                    if(d.getFullYear() === this.state.thisyear && d.getMonth() + 1 === this.state.thismonth)\r\n                    {\r\n                        list_date_work_in_month.push(d.getDate())\r\n                    }\r\n        });\r\n\r\n        let date_full = new Date()\r\n        const list_date = [];\r\n\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Sun</div>)\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Mon</div>)\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Tue</div>)\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Wes</div>)\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Thu</div>)\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Fri</div>)\r\n        list_date.push(<div className=\"width-calendar text-center date-title\">Sat</div>)\r\n        //=> show day name\r\n\r\n        for (let i = 1; i <= this.state.firstday; i++) {\r\n\r\n            list_date.push(<div className=\"width-calendar \"></div>);\r\n\r\n        }\r\n        //=> show empty date\r\n\r\n        for (let j = 1; j <= this.Day_of_month(); j++) {\r\n\r\n            let date_content = j.toString()\r\n\r\n            list_date_work_in_month.forEach(item =>{\r\n                if(item === j)\r\n                {\r\n                    date_content = \"* \" + j + \" *\"\r\n                }\r\n\r\n            })\r\n\r\n            if(date_full.getMonth() === (this.state.thismonth -1) && date_full.getFullYear() === this.state.thisyear && date_full.getDate() === j)\r\n            {\r\n              list_date.push(<div className=\"width-calendar text-center date-special\" onClick={() => this.click_Date(j) }>{date_content}</div>);\r\n            }\r\n            else\r\n            {\r\n              list_date.push(<div className=\"width-calendar text-center date-item\" onClick={() => this.click_Date(j)}>{date_content}</div>);\r\n            }  \r\n        }\r\n\r\n        return list_date;\r\n    }\r\n\r\n    month_num_to_string = (month) =>{ //=> find string name current month\r\n        switch (this.state.thismonth) {\r\n            case 1 :\r\n                return \"Jan\"\r\n            case 2 :\r\n                return \"Feb\"\r\n            case 3 :\r\n                return \"Mar\"\r\n            case 4 :\r\n                return \"Apr\"\r\n            case 5 :\r\n                return \"May\"\r\n            case 6 :\r\n                return \"Jun\"\r\n            case 7 :\r\n                return \"Jul\"\r\n            case 8 :\r\n                return \"Aug\"\r\n            case 9 :\r\n                return \"Sep\"\r\n            case 10 :\r\n                return \"Oct\"\r\n            case 11 :\r\n                return \"Nov\"\r\n            case 12 :\r\n                return \"Dec\"\r\n            default:\r\n                return 0\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"col-6 calendar\">\r\n            <div className=\"row\">\r\n              <div className=\"controller-calendar d-flex flex-row col-3\">\r\n                <i className=\"fa fa-angle-double-left btn btn-outline-info flex-row \" onClick = {()=>this.setDate(\"-\")} aria-hidden=\"true\" />\r\n              </div>\r\n              <div className = \"col-6 \">\r\n                <p className=\"text-center text-title\">{this.month_num_to_string(this.state.thismonth) + \" \" + this.state.thisyear}</p>\r\n              </div>\r\n              <div className=\"controller-calendar d-flex flex-row-reverse col-3\">\r\n                <i className=\"fa fa-angle-double-right btn btn-outline-info flex-row-reverse\" onClick = {()=>this.setDate(\"+\")}  aria-hidden=\"true\" />\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n            {this.show_list_date()}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WorkItem extends Component {\r\n    render() {\r\n        return (\r\n             <div>\r\n               <div className=\"card\">\r\n                  <div className=\"card-header\" role=\"tab\" id=\"note1\">\r\n                                <a data-toggle=\"collapse\" data-parent=\"#List_work_id\" href={\"#number\" + this.props.keyid} aria-expanded=\"true\" \r\n                                aria-controls={\"number\" + this.props.keyid}>\r\n                                    {this.props.nodetitle}\r\n                                </a>\r\n                                    <div className=\"btn-group float-right\">\r\n                                        <button className=\"btn btn-outline-warning\" onClick = {() => this.props.change()}>Edit</button>\r\n                                        <button className=\"btn btn-outline-danger\" onClick = {() => this.props.del()}>Delete</button>\r\n                                    </div>                           \r\n                                </div>\r\n\r\n\r\n                                <div id={\"number\" + this.props.keyid} className=\"collapse in\" role=\"tabpanel\" aria-labelledby=\"note1\">\r\n                                <div className=\"card-body\">\r\n                                   {this.props.nodecontent}\r\n                                </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport WorkItem from './WorkItem'\r\n\r\nexport default class List_work extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data : this.props.dulieu\r\n        }\r\n    }\r\n\r\n    del = (id) => { //=> save id you want to edit \r\n        this.props.del(id)\r\n        this.props.change(false,false)\r\n    }\r\n\r\n    showlistwork = () =>{ //=> only show work in date you click in calendar\r\n        if(this.state.data.length !== 0 )\r\n        {\r\n\r\n            return this.state.data.map((value,i) =>{ \r\n                const d = new Date(value.date)\r\n                if(d.getFullYear() === this.props.year && d.getMonth() +1  === this.props.month && d.getDate() === this.props.date)\r\n                return (\r\n                    <WorkItem \r\n                    change = {() => this.props.changeWork(value)} \r\n                    keyid={i} del = {() => this.del(value.id)} \r\n                    id={value.id} \r\n                    nodetitle = {value.header} \r\n                    nodecontent={value.content}/>\r\n                )\r\n            })\r\n        }\r\n        else\r\n        {\r\n        return  <div className=\"text-center\">Work empty</div>   \r\n        }\r\n\r\n    }\r\n\r\n    renderbtnaddnew = () =>{\r\n        if(this.props.status === false)\r\n        return <button type=\"button\" className=\"btn btn-primary mt-3\" onClick={()=>this.props.change(true)}>Add new work</button>\r\n \r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"col-5\">\r\n                    <div id=\"List_work_id\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                          {this.showlistwork()}\r\n                    </div>\r\n                {this.renderbtnaddnew()}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Addnewwork extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            header : \"\",\r\n            content : \"\",\r\n        }\r\n    }\r\n\r\n\r\n    ischange = (event) =>{\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]:value //=> auto save item to state when you change the text in add new from\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mt-3 mb-3 Addnewform\">\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header text-center\">Add new work</h5>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control mx-auto mt-3\" style={{width: '80%'}} name=\"header\" placeholder = \"text-title\" onChange={(event) => this.ischange(event)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input  type=\"text\" className=\"form-control mx-auto mt-3\" style={{width: '80%'}} name=\"content\" placeholder = \"text-content\" onChange={(event) => this.ischange(event)}/>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group mt-3 \">\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={(h,c)=>this.props.add(this.state.header,this.state.content)}>Submit</button>\r\n                            <button type=\"submit\" className=\"btn btn-warning\" onClick={()=>this.props.change(false,false)}>Hide</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Edituser extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            header : this.props.user.header,\r\n            content : this.props.user.content,\r\n        }\r\n    }\r\n\r\n\r\n    ischange = (event) =>{\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]:value //=> auto save item to state when you change the text in edit from\r\n        });\r\n\r\n        console.log(this.state.header)\r\n        console.log(this.state.content)\r\n    }\r\n\r\n    change = () =>{ //=>function save information work to date and turn off from edit\r\n        this.props.edit(this.state.header,this.state.content)\r\n        this.props.change(false,false)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mt-3 mb-3 Addnewform\">\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header text-center\">Edit work information</h5>\r\n                        <div className=\"form-group\">\r\n                            <input defaultValue={this.props.user.header} type=\"text\" className=\"form-control mx-auto mt-3\" style={{width: '80%'}} name=\"header\" placeholder = \"text-title\" onChange={(event) => this.ischange(event)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input defaultValue={this.props.user.content} type=\"text\" className=\"form-control mx-auto mt-3\" style={{width: '80%'}} name=\"content\" placeholder = \"text-content\" onChange={(event) => this.ischange(event)}/>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group mt-3 \">\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={(h,c)=>this.change()}>Submit</button>\r\n                            <button type=\"submit\" className=\"btn btn-warning\" onClick={()=>this.props.change(false,false)}>Hide</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Header from './component/Header'\nimport Tableshowdate from './component/Tableshowdate'\nimport Listwork from './component/List_work';\nimport Addnewwork from './component/Addnewwork';\nimport Edituser from './component/Edituser';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      Editstatus : false , //=> save status when add work\n      Editstatus2 : false , //=> save status when Edit work\n      renderListstatus : false, //=> save list work status when onclick one day in calendar \n      thisdate : 0 ,  //=> save dynamic date when onlick previous or next in calendar\n      thisyear : 0, //=> save dynamic year when onlick previous or next in calendar\n      thismonth : 0, //=> save dynamic month when onlick previous or next in calendar\n      data : [],  //=> save data off all work\n      userEditObject : {} //=> save information work you want to edit\n    }\n  }\n\n  changeEditstatus = (bool,bool2) =>{ //=> function save status when you edit or add or none action\n    this.setState({\n      Editstatus : bool,\n      Editstatus2 : bool2    \n    })\n  }\n\n\n  change_work = (object) =>{ //=> function save information work you want to edit in the state\n    this.setState({\n      userEditObject : object\n    })\n    this.changeEditstatus(false,true)\n  }\n\n  changeRenderListstatus = (bool,d,m,y) =>{ //=> function save dynamic information date when you click one day in calendar\n    this.setState({\n      renderListstatus: bool,\n      thisdate : d,\n      thismonth : m,\n      thisyear : y\n    })\n  }\n\n  editSubmit = (header,content) =>{ //=> funcion save edit information from state you have saved in sate by function  change_work()  to data work \n    let user = {}\n    user = this.state.userEditObject\n    user.header = header\n    user.content = content\n    this.setState({\n      userEditObject : user\n    })\n\n    let token = [] //=>create data token\n    token = this.state.data\n\n    token.forEach((item,index) =>{ //=>filter the data to be fixed\n      if(item.id === user.id)\n      {\n        token[index - 1] = user\n      }\n    })\n\n    this.changeEditstatus(false,false) //=>close from edit\n  }\n\n  Delete_work = (id) =>{\n      if(typeof id !== undefined)\n      {\n         let clone = this.state.data \n        for(let i = 0 ; i< clone.length ; i++)\n        {\n          if(clone[i].id === id)\n            {\n              clone.splice(i,1); //=>skip the item in work\n            }\n        }\n\n        this.setState({\n          data : clone  //=>save data work\n        })\n      }\n  }\n\n  Add_work = (header,content)=>{\n\n       let item = {};\n       let d = new Date(this.state.thisyear,this.state.thismonth -1 ,this.state.thisdate)\n        item.id = uuidv4(); //=>get the id through the function uuidv4\n        item.date = d\n        item.header = header\n        item.content = content\n\n        var items = this.state.data;\n\n        if (header !==\"\" && content !== \"\") //=> check text empty\n        {\n          \n          items.push(item)\n\n          this.setState({\n            data : items\n          })\n\n          this.changeEditstatus(false,false)\n        }\n        else\n        {\n          alert(\"Not enough information!\")\n        }\n  }\n\n  renderEdit = () =>{\n    var date = new Date(this.state.thisyear,this.state.thismonth,this.state.date) \n\n    if(this.state.Editstatus)\n      return  <Addnewwork  \n      change={(bool,bool2) => this.changeEditstatus(bool,bool2)} \n      add={(h,c) => this.Add_work(h,c)} \n      thisdate ={date}/>\n    else if (this.state.Editstatus2)\n      return  <Edituser \n      change={(bool,bool2) => this.changeEditstatus(bool,bool2)} \n      user = {this.state.userEditObject}\n      thisdate ={date}\n      edit={(h,c) => this.editSubmit(h,c)}/>\n  }\n\n  renderListWork = () =>{\n    if(this.state.renderListstatus)\n    return <Listwork \n    del = {(i) => {this.Delete_work(i)}}  \n    change = {(bool,bool2) => this.changeEditstatus(bool,bool2)} \n    dulieu = {this.state.data} \n    status = {this.state.Editstatus} \n    date = {this.state.thisdate}\n    year = {this.state.thisyear}\n    month = {this.state.thismonth}\n    changeWork = {(object) => this.change_work(object)}\n    />\n    \n    else\n    return <div className=\"col-5 text-center\">Please choose a date</div>\n  }\n\n  render() {\n    return (\n      <div>\n          <Header/>\n          <div className=\"container-fluid mt-3 \">\n              <div className=\"row\">\n                <Tableshowdate \n                change = {(bool,d,m,y) => this.changeRenderListstatus(bool,d,m,y)} \n                dulieu = {this.state.data}\n                change_edit = {(bool,bool2) => this.changeEditstatus(bool,bool2)}/>                \n                {this.renderListWork()}\n              </div>\n          </div>\n        {this.renderEdit()}\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}